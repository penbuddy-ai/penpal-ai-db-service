version: "3.8"

services:
  db-service:
    build:
      context: ..
      dockerfile: Dockerfile
      target: development
    container_name: penpal-ai-db-service
    volumes:
      - ../:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    command: npm run start:dev
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - penpal-network
    healthcheck:
      test: [CMD, curl, -f, "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:6.0
    container_name: penpal-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - penpal-network
    environment:
      - MONGO_INITDB_DATABASE=penpal-ai
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    command: [--auth, --bind_ip_all]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u admin -p admin123 --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7.0-alpine
    container_name: penpal-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass redis123
    networks:
      - penpal-network
    healthcheck:
      test: [CMD, redis-cli, -a, redis123, ping]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  penpal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
